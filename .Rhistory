library(UsingR); data(galton)
par(mfrow=c(1,2))
hist(galton$child,col="blue",breaks=100)
hist(galton$parent,col="blue",breaks=100)
str(galton)
hist(galton$child,col="blue",breaks=150)
hist(galton$child,col="blue",breaks=100)
hist(galton$child,col="blue",breaks=1000)
hist(galton$child,col="blue",breaks=10)
hist(galton$child,col="blue",breaks=5)
hist(galton$child,col="blue",breaks=10)
hist(galton$child,col="blue",breaks=100)
rep(1,3)
rep(c(1,21,3)
)
rep(c(1,2),3)
seq(0,150,length=100
)
library(UsingR); data(galton)
par(mfrow=c(1,2))
hist(galton$child,col="blue",breaks=100)
hist(galton$parent,col="blue",breaks=100)
library(manipulate)
myHist <- function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu, mu), c(0, 150),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
hist(galton$child,col="blue",breaks=100)
meanChild <- mean(galton$child)
lines(rep(meanChild,100),seq(0,150,length=100),col="red",lwd=5)
rep(meanChild,100)
?lines
myPlot <- function(beta){
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",
ylab = "child"
)
abline(0, beta, lwd = 3)
points(0, 0, cex = 2, pch = 19)
mse <- mean( (y - beta * x)^2 )
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02)
)
lm(I(child - mean(child))~ I(parent - mean(parent)) - 1, data = galton)
library(kernlab)
data(spam)
install.packages("kernlab")
library(kernlab)
data(spam)
# Perform the subsampling
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
dim(spam)
trainSpam = spam[trainIndicator == 1, ]
testSpam = spam[trainIndicator == 0, ]
head(trainspam)
head(trainSpam)
str(spam)
plot(log10(trainSpam[, 1:4] + 1))
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
hCluster = hclust(dist(t(trainSpam[, 1:57])))
plot(hCluster)
trainSpam$numType
trainSpam$numType = as.numeric(trainSpam$type) - 1
str(trainSpam$numType)
table(trainSpam$numType)
table(as.numeric(trainSpam$type))
?cv.lm
library(boot)
?cv.lm
?cv.glm
table(trainSpam$type)
load("E:/USUARIOS/JAVI/DOCUMENTOS/COURSERA/DATA_SCIENCE_SPECIALIZATION/WD_DSS/6_Statistical_Inference/Project/Averages_Exponentials.Rmd")
data(diamond)
library(UsingR); data(diamond)
y <- diamond$price; x <- diamond$carat; n <- length(y)
fit <- lm(y ~ x)
summary(fit
)
n
setwd("E:/USUARIOS/JAVI/DOCUMENTOS/COURSERA/DATA_SCIENCE_SPECIALIZATION/WD_DSS/5_Reproducible_Research/Project_1/RepData_PeerAssessment1")
ff <- read.csv("./activity.csv")
str(ff)
file_read <- read.csv(csv_File, sep = ",", na.strings = "NA",
stringsAsFactors = FALSE)
zip_File <- "./activity.zip"
csv_File <- "./activity.csv"
if (!file.exists(csv_File)) {
unzip(zip_File)
}
file_read <- read.csv(csv_File, sep = ",", na.strings = "NA",
stringsAsFactors = FALSE)
str(file_read)
head(file_read,100)
head(file_read,1000)
date()
head(file_read,100)
head(file_read)
?read.csv
str(file)
zip_File <- "./activity.zip"
csv_File <- "./activity.csv"
if (!file.exists(csv_File)) {
unzip(zip_File)
}
file <- read.csv(csv_File,
sep = ",",
na.strings = "NA",
stringsAsFactors = FALSE)
file$date <- as.Date(file$date)
str(file)
head(weekdays(file$date))
Sys.setlocale("LC_TIME", "English")
head(weekdays(file$date))
sum(is.NA(file$steps))
sum(is.na(file$steps))
sum(is.na(file$date))
sum(is.na(file$interval))
file_cc <- complete.cases(file)
cc <- complete.cases(file)
file_cc <- file[cc,]
head(file_cc)
?barplot
xx <- tapply(file_cc, file_cc$date, mean)
xx <- tapply(file_cc$steps, file_cc$date, mean)
head(xx)
hist(xx)
xx <- tapply(file_cc$steps, file_cc$date, sum)
hist(xx)
mean(xx)
median(xx)
hist(xx, breaks=10)
hist(xx, breaks=15)
hist(xx, breaks=10)
hist(xx)
max(xx)
barplot(xx)
head(xx)
hist(xx)
yy <- aggregate(steps ~ date, data=file_cc, sum)
head(yy)
hist(yy)
hist(yy$steps)
yy <- tapply(steps ~ date, data=file_cc, sum)
yy <- tapply(steps, date, data=file_cc, sum)
xlab="Total number of steps taken each day"))
hist(xx, breaks=10,
s
s)
avg_minutes <- tapply(file_cc$steps, file_cc$interval, sum)
head(avg_minutes)
file_cc(file_cc$minutes=="0",)
cc <- complete.cases(file)
file_cc <- file[cc,]
total_daily <- tapply(file_cc$steps, file_cc$date, sum)
head(total_daily)
hist(total_daily, breaks=20,
xlab="Total number of steps taken each day",
main="Histogram")
mean(total_daily)
median(total_daily)
max(total_daily)
yy <- aggregate(steps ~ date, data=file_cc, sum)
head(yy)
hist(yy$steps)
avg_minutes <- tapply(file_cc$steps, file_cc$interval, sum)
avg_minutes
file_cc[file_cc$minutes=="0",]
file_cc[file_cc$interval=="0",]
mean(file_cc[file_cc$interval=="0",])
mean(file_cc[file_cc$interval=="0",]$steps)
sum(file_cc[file_cc$interval=="0",]$steps)
avg_minutes <- tapply(file_cc$steps, file_cc$interval, mean)
avg_minutes
max_interval <- which.max(avg_minutes)
which.max(avg_minutes)
max(avg_minutes)
zz <- which.max(avg_minutes)
str(zz)
zz
avg_minutes[which.max(avg_minutes)]
plot(avg_minutes)
plot(avg_minutes, type="l")
avg_minutes
plot(names(avg_minutes), avg_minutes, type="l")
names(avg_minutes)
avg_minutes <- tapply(file_cc$steps, file_cc$interval, mean)
plot(names(avg_minutes), avg_minutes,
type="l",
main = "average daily activity pattern",
xlab = "5-minutes interval",
ylab = "Average Across All Days")
is.na(file)
sum(is.na(file))
head(is.na(file))
?is.na
sum(is.na(file)[1,])
sum(is.na(file)[3333,])
colsum(na_values)
?col
?colsum
??colsum
rowsum(na_values)
na_values <- sum(is.na(file))
rowsum(na_values)
?rowsum
tapply(na_value, sum)
tapply(na_values, sum)
?tapply
?rowsum
colSums(na_values)
na_values
na_values <- is.na(file)
colSums(na_values)
head(file)
avg_minutes
na_values <- is.na(file)
na_values
zz <- file(na_values$steps)
zz <- file[na_values$steps,]
na_values
str(na_values)
zz <- file[na_values,]
head(zz)
head(zz)
avg_minutes
avg_minutes
head(zz)
zz$steps
avg_minutes[file[na_values,]$interval]
avg_minutes[zz$interval]
avg_minutes[zz$interval,]
str(avg_minutes)
zz$interval
avg_minutes
dim(avg_minutes)
avg_minutes[1]
avg_minutes["0"]
avg_minutes["5"]
avg_minutes[zz$interval]
na_values <- is.na(file)
colSums(na_values)
zz <- file[na_values,]
head(zz)
avg_minutes
str(avg_minutes)
dim(avg_minutes)
avg_minutes$dimnames
names(avg_minutes)
head(dd)
head(zz)
avg_minutes["5"]
?impute
library(scales)
?impute
library(scales)
library(Hmisc)
?impute
avg_minutes
yy
avg_2 <- aggregate(steps ~ interval, data=file_cc, mean)
avg_2
head(total_daily)
head(yy)
avg_minutes
avg_2
na_values <- is.na(file)
colSums(na_values)
mm <- merge(file, avg_2, by = "interval")
head(mm)
head(file)
head(avg_2)
tail(mm)
na2 <- is.na(mm$steps)
na2 <- is.na(mm$steps.x)
head(mm$steps[na2])
head(mm$steps.x[na2])
sum(na2)
mm$steps.x[na2] <- mm$steps.y[na2]
head(mm)
teil(mm)
tail(mm)
dim(mm$steps.x)
head(mm$steps.x)
is.na(mm$steps.x)
sum(is.na(mm))
colSums(is.na(mm))
sum(mm$steps.x==mm$steps.y)
head(mm$steps.x[na2])
mm <- merge(file, avg_2, by = "interval")
na2 <- is.na(mm$steps.x)
head(mm$steps.x[na2])
str(mm$steps.x[na2])
mm$steps.x[na2] <- mm$steps.y[na2]
head(mm$steps.x[na2])
str(mm$steps.x[na2])
colSums(is.na(mm))
sum(mm$steps.x==mm$steps.y)
head(mm)
head(mm$steps.x==mm$steps.y)
xx <- mm[na2,]
head(xx)
xx <- mm[!na2,]
head(xx)
xx2 <- mm[mm$steps.x==mm$steps.y,]
xx2
yy
xx <- mm[!na2,]
head(xx)
xx2 <- mm[xx$steps.x==xx$steps.y,]
xx2
sum(xx$steps.x==xx$steps.y)
xx2 <- xx[xx$steps.x==xx$steps.y,]
xx2
sum(xx$steps.x==xx$steps.y)
View(yy)
cc <- complete.cases(file)
file_cc <- file[cc,]
total_daily <- tapply(file_cc$steps, file_cc$date, sum)
head(total_daily)
hist(total_daily,
breaks=20,
xlab="Total Number Of Steps Taken Each Day",
main="Histogram")
mean(total_daily)
median(total_daily)
max(total_daily)
yy <- aggregate(steps ~ date, data=file_cc, sum)
head(yy)
hist(yy$steps, breaks=20)
total_daily <- aggregate(steps ~ date, data=file_cc, sum)
head(total_daily)
hist(total_daily$steps,
breaks=20,
xlab="Total Number Of Steps Taken Each Day",
main="Histogram")
mean(total_daily)
mean(total_daily$steps)
median(total_daily$steps)
max(total_daily$steps)
avg_minutes <- aggregate(steps ~ interval, data=file_cc, mean)
avg_minutes
head(avg_minutes)
?plot
plot(interval, steps, data=avg_minutes,
type="l",
main = "Average Daily Activity Pattern",
xlab = "5-Minutes Interval",
ylab = "Average Across All Days")
plot(avg_minutes$interval, avg_minutes$steps,
type="l",
main = "Average Daily Activity Pattern",
xlab = "5-Minutes Interval",
ylab = "Average Across All Days")
avg_minutes[which.max(avg_minutes$steps), ]
?which.max
na_values <- is.na(file)
colSums(na_values)
str(avg_minutes)
dim(avg_minutes)
merged_file <- merge(file, avg_minutes, by = "interval")
head(merged_file)
tail(merged_file)
tail(avg_minutes)
na_rows <- is.na(merged_file$steps.x)
sum(na_rows)
head(mm$steps.x[na2])
head(merged_file$steps.x[na2])
str(merged_file$steps.x[na2])
merged_file$steps.x[na2] <- merged_file$steps.y[na2]
head(na_values)
head(na_rows)
colSums(is.na(file))
str(avg_minutes)
dim(avg_minutes)
merged_file <- merge(file, avg_minutes, by = "interval")
na_rows <- is.na(merged_file$steps.x)
sum(na_rows)
merged_file$steps.x[na2] <- merged_file$steps.y[na2]
colSums(is.na(mm))
colSums(is.na(merged_file))
sum(merged_file$steps.x==merged_file$steps.y)
sum(xx$steps.x==xx$steps.y)
dim(xx2)
head(xx2)
sum(xx2$steps>0)
sum(xx2$steps==0)
sum(xx2$steps.x==0)
sum(xx2$steps.x==0)
sum(xx2$steps.x>0)
sum(merged_file$steps.x==merged_file$steps.y)
colSums(is.na(merged_file))
head(merged_file)
imputed_file <- merged_file[,c(1:3)]
head(imputed_file)
names(imputed_file)
names(imputed_file)[2] <- "steps"
head(imputed_file)
colSums(is.na(imputed_file))
total_daily_imputed <- aggregate(steps ~ date, data=imputed_file, sum)
hist(total_daily_imputed$steps,
breaks=20,
xlab="Total Number Of Steps Taken Each Day",
main="Histogram With Imputed Values")
mean(total_daily_imputed$steps)
median(total_daily_imputed$steps)
hist(total_daily_imputed$steps,
breaks=20,
xlab="Total Number Of Steps Taken Each Day",
main="Histogram With Imputed Values")
hist(total_daily$steps,
breaks=20,
xlab="Total Number Of Steps Taken Each Day",
main="Histogram")
hist(total_daily_imputed$steps,
breaks=20,
xlab="Total Number Of Steps Taken Each Day",
main="Histogram With Imputed Values")
file_nocc <- file[!cc,]
head(file_nocc)
hist(file_nocc$date)
table(file_nocc$date)
imputed_file$daytype <- weekdays(imputed_file$date)
head(imputed_file)
Sys.setlocale("LC_TIME", "English")
head(imputed_file)
imputed_file$daytype <- weekdays(imputed_file$date)
head(imputed_file)
?weekdays
imputed_file$daytype2 <- ifelse(weekdays(imputed_file$date)=="Saturday" |
weekdays(imputed_file$date)=="Sunday", "weekend", "weekday")
head(imputed_file)
imputed_file <- merged_file[,c(1:3)]
names(imputed_file)[2] <- "steps"
colSums(is.na(imputed_file))
total_daily_imputed <- aggregate(steps ~ date, data=imputed_file, sum)
hist(total_daily_imputed$steps,
breaks=20,
xlab="Total Number Of Steps Taken Each Day",
main="Histogram With Imputed Values")
mean(total_daily_imputed$steps)
median(total_daily_imputed$steps)
Sys.setlocale("LC_TIME", "English")
imputed_file$daytype <- ifelse(weekdays(imputed_file$date)=="Saturday" |
weekdays(imputed_file$date)=="Sunday", "weekend", "weekday")
head(imputed_file)
str(imputed_file)
imputed_file$daytype <- as.factor(ifelse(
weekdays(imputed_file$date)=="Saturday" |
weekdays(imputed_file$date)=="Sunday",
"weekend",
"weekday"))
str(imputed_file)
head(imputed_file)
avg_minutes
avg_min_daytype <- aggregate(steps ~ interval + daytype, data=imputed_file, mean)
avg_min_daytype
avg_min_daytype <- aggregate(steps ~ daytype + interval, data=imputed_file, mean)
avg_min_daytype
daytype
avg_min_daytype <- aggregate(steps ~ interval + daytype, data=imputed_file, mean)
avg_min_daytype
?xyplot
library(lattice)
?xyplot
xyplot(steps ~ interval | daytype,
data=avg_min_daytype,
type = "l",
layout = c(1,2),
main = "MAIN",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken"
)
xyplot(steps ~ interval | daytype,
data=avg_min_daytype,
type = "l",
layout = c(2,1),
main = "MAIN",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken")
?plot
plot(interval ~ steps, data=avg_minutes,
type="l",
main = "Average Daily Activity Pattern",
xlab = "5-Minutes Interval",
ylab = "Average Across All Days")
plot(steps ~ interval, data=avg_minutes,
type="l",
main = "Average Daily Activity Pattern",
xlab = "5-Minutes Interval",
ylab = "Average Across All Days")
hist(steps, data=total_daily,
breaks=20,
xlab="Total Number Of Steps Taken Each Day",
main="Histogram")
?hist
head(avg_min_daytype)
We can see that there are several 5-minutes intervals where the average number of steps accross all days is greater than for the others, being the maximum of them at the interval **835**, i.e *8:35 am*, as shown effectively here:
